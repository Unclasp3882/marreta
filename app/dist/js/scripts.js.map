{"version":3,"sources":["scripts.js"],"names":["navigator","window","addEventListener","serviceWorker","register","then","catch","document","integration","querySelector","integrationToggle","extension","extensionToggle","closeOtherMenus","exceptMenu","classList","remove","e","stopPropagation","toggle"],"mappings":"AAIA,kBAAAA,WACAC,OAAAC,iBAAA,OAAA,KACAF,UAAAG,cAAAC,SAAA,oBAAA,EACAC,KAAA,MAEA,EACAC,MAAA,MAEA,CACA,CAAA,EAMAC,SAAAL,iBAAA,mBAAA,WACA,IAAAM,EAAAD,SAAAE,cAAA,cAAA,EACA,IAAAC,EAAAH,SAAAE,cAAA,sBAAA,EACA,IAAAE,EAAAJ,SAAAE,cAAA,YAAA,EACA,IAAAG,EAAAL,SAAAE,cAAA,oBAAA,EAGA,IAMAI,EAAA,IACAC,IAAAN,GACAA,EAAAO,UAAAC,OAAA,MAAA,EAEAF,IAAAH,GACAA,EAAAI,UAAAC,OAAA,MAAA,CAEA,EAEAN,EAAAR,iBAAA,QAAA,IACAe,EAAAC,gBAAA,EACAL,EAAAL,CAAA,EACAA,EAAAO,UAAAI,OAAA,MAAA,CACA,CAAA,EAEAP,EAAAV,iBAAA,QAAA,IACAe,EAAAC,gBAAA,EACAL,EAAAF,CAAA,EACAA,EAAAI,UAAAI,OAAA,MAAA,CACA,CAAA,EAGAX,EAAAN,iBAAA,QAAA,IACAe,EAAAC,gBAAA,CACA,CAAA,EAEAP,EAAAT,iBAAA,QAAA,IACAe,EAAAC,gBAAA,CACA,CAAA,EAGAX,SAAAL,iBAAA,QAAA,KApCAM,EAAAO,UAAAC,OAAA,MAAA,EACAL,EAAAI,UAAAC,OAAA,MAAA,CAqCA,CAAA,CACA,CAAA","file":"scripts.js","sourcesContent":["/**\r\n * Service Worker registration for PWA functionality\r\n * Registers a service worker to enable offline capabilities and PWA features\r\n */\r\nif ('serviceWorker' in navigator) {\r\n    window.addEventListener('load', () => {\r\n        navigator.serviceWorker.register('/service-worker.js')\r\n            .then(() => {\r\n                // Service Worker registered successfully\r\n            })\r\n            .catch(() => {\r\n                // Service Worker registration failed\r\n            });\r\n    });\r\n}\r\n\r\n/**\r\n * Header toggle menus\r\n */\r\ndocument.addEventListener('DOMContentLoaded', function () {\r\n    const integration = document.querySelector('.integration');\r\n    const integrationToggle = document.querySelector('.integration__toggle');\r\n    const extension = document.querySelector('.extension');\r\n    const extensionToggle = document.querySelector('.extension__toggle');\r\n\r\n    // Function to close all menus\r\n    const closeAllMenus = () => {\r\n        integration.classList.remove('open');\r\n        extension.classList.remove('open');\r\n    };\r\n\r\n    // Function to close other menus except the one passed\r\n    const closeOtherMenus = (exceptMenu) => {\r\n        if (exceptMenu !== integration) {\r\n            integration.classList.remove('open');\r\n        }\r\n        if (exceptMenu !== extension) {\r\n            extension.classList.remove('open');\r\n        }\r\n    };\r\n\r\n    integrationToggle.addEventListener('click', (e) => {\r\n        e.stopPropagation(); // Prevent click from bubbling to document\r\n        closeOtherMenus(integration);\r\n        integration.classList.toggle('open');\r\n    });\r\n\r\n    extensionToggle.addEventListener('click', (e) => {\r\n        e.stopPropagation(); // Prevent click from bubbling to document\r\n        closeOtherMenus(extension);\r\n        extension.classList.toggle('open');\r\n    });\r\n\r\n    // Prevent clicks inside menus from closing them\r\n    integration.addEventListener('click', (e) => {\r\n        e.stopPropagation();\r\n    });\r\n\r\n    extension.addEventListener('click', (e) => {\r\n        e.stopPropagation();\r\n    });\r\n\r\n    // Close menus when clicking outside\r\n    document.addEventListener('click', () => {\r\n        closeAllMenus();\r\n    });\r\n});"]}